name: Update DailyRoutines Release Stats

on:
  schedule:
    - cron: '0 * * * *'  # 每小时运行一次
  workflow_dispatch:  # 允许手动触发

jobs:
  update-stats:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Fetch release data and update files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          import requests
          import os

          # 设置 GitHub API 请求头
          headers = {
              'Authorization': f"token {os.environ['GITHUB_TOKEN']}",
              'Accept': 'application/vnd.github.v3+json'
          }

          # 获取最新 release 信息
          response = requests.get(
              'https://api.github.com/repos/AtmoOmen/DailyRoutines/releases/latest',
              headers=headers
          )
          release_data = response.json()

          # 计算总下载量
          total_downloads = sum(asset['download_count'] * 2 for asset in release_data['assets'])

          # 获取版本号
          version = release_data['tag_name']

          # 创建 Assets 文件夹（如果不存在）
          os.makedirs('Assets', exist_ok=True)

          # 写入下载量到 downloads_latest.txt
          with open('Assets/downloads_latest.txt', 'w') as f:
              f.write(str(total_downloads))

          # 写入版本号到 version_latest.txt
          with open('Assets/version_latest.txt', 'w') as f:
              f.write(version)

          print("Files updated successfully.")
        shell: python

      - name: Commit and push if changed
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add Assets/downloads_latest.txt Assets/version_latest.txt
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update release stats" && git push)