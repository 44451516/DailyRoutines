<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Auto" xml:space="preserve">
    <value>自动</value>
  </data>
  <data name="AutoCACDescription" xml:space="preserve">
    <value>交互游戏机后, 自动开始重复游玩重击伽美什</value>
  </data>
  <data name="AutoCACTitle" xml:space="preserve">
    <value>自动重击伽美什</value>
  </data>
  <data name="AutoExpertDelivery-Start" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="AutoExpertDelivery-Stop" xml:space="preserve">
    <value>停止</value>
  </data>
  <data name="AutoExpertDeliveryDescription" xml:space="preserve">
    <value>打开筹备任务界面, 并点击开始后, 自动上交装备兑换军票</value>
  </data>
  <data name="AutoExpertDeliveryTitle" xml:space="preserve">
    <value>自动筹备稀有品</value>
  </data>
  <data name="AutoLeveQuests-GetAreaLeveData" xml:space="preserve">
    <value>获取当前区域理符任务数据</value>
  </data>
  <data name="AutoLeveQuests-ObtainLeveClientID" xml:space="preserve">
    <value>获取理符委托人 ID</value>
  </data>
  <data name="AutoLeveQuests-ObtainLevemeteID" xml:space="preserve">
    <value>获取理符发行人 ID</value>
  </data>
  <data name="AutoLeveQuests-SelectedLeve" xml:space="preserve">
    <value>选择理符:</value>
  </data>
  <data name="AutoLeveQuests-Start" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="AutoLeveQuests-Stop" xml:space="preserve">
    <value>结束</value>
  </data>
  <data name="AutoLeveQuestsDescription" xml:space="preserve">
    <value>配置完成并点击开始后, 自动重复完成指定的生产理符任务, 直至理符额度耗尽
(必须开启: 自动选择并递交物品)</value>
  </data>
  <data name="AutoLeveQuestsTitle" xml:space="preserve">
    <value>自动批量完成生产理符</value>
  </data>
  <data name="AutoLogin-CharacterIndex" xml:space="preserve">
    <value>角色索引</value>
  </data>
  <data name="AutoLogin-CharaIndexInputTooltip" xml:space="preserve">
    <value>各服务器下, 第一名角色的索引为 0, 第二名为 1, 以此类推</value>
  </data>
  <data name="AutoLogin-ServerName" xml:space="preserve">
    <value>服务器名</value>
  </data>
  <data name="AutoLogin-ServerNotFoundErrorMessage" xml:space="preserve">
    <value>服务器 "{0}" 不存在, 请重新输入</value>
  </data>
  <data name="AutoLoginDescription" xml:space="preserve">
    <value>启用并配置完成后, 下次开启游戏时, 自动登录到你所选择的角色</value>
  </data>
  <data name="AutoLoginTitle" xml:space="preserve">
    <value>自动登录</value>
  </data>
  <data name="AutoMiniCactpotDescription" xml:space="preserve">
    <value>进入仙人微彩界面后, 自动完成仙人微彩
(安装并启用了 ezMiniCactpot 则根据其推荐来点选, 未安装则随机选择)</value>
  </data>
  <data name="AutoMiniCactpotTitle" xml:space="preserve">
    <value>自动仙人微彩</value>
  </data>
  <data name="AutoNoviceNetwork-AttemptedTimes" xml:space="preserve">
    <value>已尝试次数</value>
  </data>
  <data name="AutoNoviceNetwork-Start" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="AutoNoviceNetwork-Stop" xml:space="preserve">
    <value>结束</value>
  </data>
  <data name="AutoNoviceNetworkDescription" xml:space="preserve">
    <value>点击开始后, 自动重复尝试加入新人频道</value>
  </data>
  <data name="AutoNoviceNetworkTitle" xml:space="preserve">
    <value>自动加入新人频道</value>
  </data>
  <data name="AutoQTEDescription" xml:space="preserve">
    <value>在副本中, 自动完成动态演练 (QTE)
(即便启用, 仍然建议你时刻关注进度条, 以避免出现意外事故)</value>
  </data>
  <data name="AutoQTETitle" xml:space="preserve">
    <value>自动动态演练</value>
  </data>
  <data name="AutoRequestItemSubmitDescription" xml:space="preserve">
    <value>在递交物品时, 自动选择物品并完成递交</value>
  </data>
  <data name="AutoRequestItemSubmitTitle" xml:space="preserve">
    <value>自动选择并递交物品</value>
  </data>
  <data name="AutoRetainerCollectDescription" xml:space="preserve">
    <value>打开雇员列表界面后, 自动确认已探索结束雇员的探险结果并重新委派
(需要挂机定时收请使用 AutoRetainer)</value>
  </data>
  <data name="AutoRetainerCollectTitle" xml:space="preserve">
    <value>自动收取雇员</value>
  </data>
  <data name="AutoRetainerPriceAdjust-LowestAcceptablePrice" xml:space="preserve">
    <value>最低可接受价格</value>
  </data>
  <data name="AutoRetainerPriceAdjust-SinglePriceReductionValue" xml:space="preserve">
    <value>单次降价值</value>
  </data>
  <data name="AutoRetainerPriceAdjust-WarnMessageReachLowestPrice" xml:space="preserve">
    <value>物品: {0} (当前市场价: {1}) 已低于设定最低价: {2}, 跳过改价</value>
  </data>
  <data name="AutoRetainerPriceAdjustDescription" xml:space="preserve">
    <value>打开雇员出售列表后, 自动将所有出售商品价格改为当前市场最低价格减去指定值
出售物品时, 自动获取当前市场最低价并完成出售</value>
  </data>
  <data name="AutoRetainerPriceAdjustTitle" xml:space="preserve">
    <value>自动雇员改价</value>
  </data>
  <data name="Base" xml:space="preserve">
    <value>基础</value>
  </data>
  <data name="CommandHelp" xml:space="preserve">
    <value>打开主界面</value>
  </data>
  <data name="Duty" xml:space="preserve">
    <value>副本</value>
  </data>
  <data name="Enable" xml:space="preserve">
    <value>启用</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>一般</value>
  </data>
  <data name="GoldSaucer" xml:space="preserve">
    <value>金碟</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="Retainer" xml:space="preserve">
    <value>雇员</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>设置</value>
  </data>
</root>