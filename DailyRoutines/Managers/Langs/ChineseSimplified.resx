<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Auto" xml:space="preserve">
    <value>自动</value>
  </data>
  <data name="AutoCACDescription" xml:space="preserve">
    <value>交互游戏机后, 自动开始重复游玩重击伽美什</value>
  </data>
  <data name="AutoCACTitle" xml:space="preserve">
    <value>自动重击伽美什</value>
  </data>
  <data name="AutoCancelCastDescription" xml:space="preserve">
    <value>当目标死亡或不可选中时, 自动中断咏唱</value>
  </data>
  <data name="AutoCancelCastTitle" xml:space="preserve">
    <value>自动中断咏唱</value>
  </data>
  <data name="AutoCTSDescription" xml:space="preserve">
    <value>交互游戏机后, 自动开始重复游玩强袭水晶塔</value>
  </data>
  <data name="AutoCTSTitle" xml:space="preserve">
    <value>自动强袭水晶塔</value>
  </data>
  <data name="AutoCutSceneSkip-InterruptNotice" xml:space="preserve">
    <value>注: 仅支持在过场剧情开始加载前阻止, 阻止成功后将不再尝试跳过该段剧情</value>
  </data>
  <data name="AutoCutSceneSkipDescription" xml:space="preserve">
    <value>(本模块无法跳过原本就无法跳过的动画)</value>
  </data>
  <data name="AutoCutSceneSkipTitle" xml:space="preserve">
    <value>自动跳过过场动画</value>
  </data>
  <data name="AutoDismountDescription" xml:space="preserve">
    <value>当骑乘坐骑时, 若尝试使用可用技能, 则自动下坐骑并使用技能</value>
  </data>
  <data name="AutoDismountTitle" xml:space="preserve">
    <value>自动下坐骑</value>
  </data>
  <data name="AutoExpertDelivery-Start" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="AutoExpertDelivery-Stop" xml:space="preserve">
    <value>停止</value>
  </data>
  <data name="AutoExpertDeliveryDescription" xml:space="preserve">
    <value>打开筹备任务界面, 并点击开始后, 自动上交装备兑换军票</value>
  </data>
  <data name="AutoExpertDeliveryTitle" xml:space="preserve">
    <value>自动筹备稀有品</value>
  </data>
  <data name="AutoLeveQuests-GetAreaLeveData" xml:space="preserve">
    <value>获取当前区域理符任务数据</value>
  </data>
  <data name="AutoLeveQuests-ObtainLeveClientID" xml:space="preserve">
    <value>获取理符委托人 ID</value>
  </data>
  <data name="AutoLeveQuests-ObtainLevemeteID" xml:space="preserve">
    <value>获取理符发行人 ID</value>
  </data>
  <data name="AutoLeveQuests-SelectedLeve" xml:space="preserve">
    <value>选择理符:</value>
  </data>
  <data name="AutoLeveQuests-Start" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="AutoLeveQuests-Stop" xml:space="preserve">
    <value>结束</value>
  </data>
  <data name="AutoLeveQuestsDescription" xml:space="preserve">
    <value>配置完成并点击开始后, 自动重复完成指定的生产理符任务, 直至理符额度耗尽
(前置模块: 自动选择并递交物品, 自动跳过对话, 自动确认任务结果)</value>
  </data>
  <data name="AutoLeveQuestsTitle" xml:space="preserve">
    <value>自动批量完成生产理符</value>
  </data>
  <data name="AutoLogin-CharacterIndex" xml:space="preserve">
    <value>角色索引</value>
  </data>
  <data name="AutoLogin-CharaIndexInputTooltip" xml:space="preserve">
    <value>各服务器下, 第一名角色的索引为 0, 第二名为 1, 以此类推</value>
  </data>
  <data name="AutoLogin-ServerName" xml:space="preserve">
    <value>服务器名</value>
  </data>
  <data name="AutoLogin-ServerNotFoundErrorMessage" xml:space="preserve">
    <value>服务器 "{0}" 不存在, 请重新输入</value>
  </data>
  <data name="AutoLoginDescription" xml:space="preserve">
    <value>启用并配置完成后, 下次开启游戏时, 自动登录到你所选择的角色</value>
  </data>
  <data name="AutoLoginTitle" xml:space="preserve">
    <value>自动登录</value>
  </data>
  <data name="AutoMarkAetherCurrents-DisplayLeftCurrents" xml:space="preserve">
    <value>显示剩余标点</value>
  </data>
  <data name="AutoMarkAetherCurrents-DisplayLeftCurrentsHelp" xml:space="preserve">
    <value>仅在待显示的野外风脉泉超过 8 个时, 才需要点击此按钮</value>
  </data>
  <data name="AutoMarkAetherCurrents-FieldMarkerHelp" xml:space="preserve">
    <value>根据风脉泉界面 从右到左 依次显示为:
A / B / C / D / 1 / 2 / 3 / 4</value>
  </data>
  <data name="AutoMarkAetherCurrents-ManuallySelectCurrent" xml:space="preserve">
    <value>手动指定待显示的风脉泉</value>
  </data>
  <data name="AutoMarkAetherCurrents-ManuallySelectCurrentHelp" xml:space="preserve">
    <value>下方勾选框与游戏原生风脉泉界面的野外风脉为逐个对应关系
若已在目标地图, 则在选择后需要手动刷新一次标点显示</value>
  </data>
  <data name="AutoMarkAetherCurrents-RefreshDisplay" xml:space="preserve">
    <value>刷新标点显示</value>
  </data>
  <data name="AutoMarkAetherCurrentsDescription" xml:space="preserve">
    <value>在地图上自动标记所有风脉泉的位置, 并允许自定义待显示的风脉泉</value>
  </data>
  <data name="AutoMarkAetherCurrentsTitle" xml:space="preserve">
    <value>自动标记风脉泉</value>
  </data>
  <data name="AutoMiniCactpotDescription" xml:space="preserve">
    <value>进入仙人微彩界面后, 自动完成仙人微彩
(不保证金碟币收益最大化)</value>
  </data>
  <data name="AutoMiniCactpotTitle" xml:space="preserve">
    <value>自动仙人微彩</value>
  </data>
  <data name="AutoMJIGather-CollectGatherPointsHelp" xml:space="preserve">
    <value>因物体渲染距离限制, 初次使用请先开启数据采集模式, 然后飞遍全岛一次记录各采集点数据, 后续使用无需再次采集数据
(由于游戏过图限制, 该模块采集方式无法处理水下采集点, 如有需要, 请使用 visland)</value>
  </data>
  <data name="AutoMJIGather-CollectGatherPointsInfo" xml:space="preserve">
    <value>{0}获取采集点数据</value>
  </data>
  <data name="AutoMJIGather-GatherProcessInfo" xml:space="preserve">
    <value>当前进度: {0} / {1}</value>
  </data>
  <data name="AutoMJIGather-InsufficientGatherNodes" xml:space="preserve">
    <value>已选择的采集点数量过少 (≤ 10), 请重新选择</value>
  </data>
  <data name="AutoMJIGather-NodesInfo" xml:space="preserve">
    <value>已获取 {0} 类采集点, 已选择 {1} 类, 共 {2} 个</value>
  </data>
  <data name="AutoMJIGather-Start" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="AutoMJIGather-Stop" xml:space="preserve">
    <value>停止</value>
  </data>
  <data name="AutoMJIGather-StopWhenReachCaps" xml:space="preserve">
    <value>素材达到上限时停止采集并发送通知</value>
  </data>
  <data name="AutoMJIGatherDescription" xml:space="preserve">
    <value>配置完成并点击开始后, 自动循环采集无人岛素材</value>
  </data>
  <data name="AutoMJIGatherTitle" xml:space="preserve">
    <value>自动无人岛采集</value>
  </data>
  <data name="AutoMT-InterruptNotice" xml:space="preserve">
    <value>注: 仅支持在两场游戏间打断, 若要在游戏过程中打断, 请手动卸载模块</value>
  </data>
  <data name="AutoMTDescription" xml:space="preserve">
    <value>交互游戏机后, 自动开始重复游玩怪物投篮</value>
  </data>
  <data name="AutoMTTitle" xml:space="preserve">
    <value>自动怪物投篮</value>
  </data>
  <data name="AutoNotifyCutSceneEnd-NotificationMessage" xml:space="preserve">
    <value>所有队友的过场动画均已结束</value>
  </data>
  <data name="AutoNotifyCutSceneEnd-NotificationMessageHelp" xml:space="preserve">
    <value>提示信息外观 (Windows 10+)</value>
  </data>
  <data name="AutoNotifyCutSceneEnd-OnlyWhenBackground" xml:space="preserve">
    <value>仅当游戏位于后台时提醒</value>
  </data>
  <data name="AutoNotifyCutSceneEndDescription" xml:space="preserve">
    <value>在副本内, 如若队友观看过场剧情超过五秒, 则在全部队友的过场剧情都已结束时, 自动发送一条 Windows 系统通知</value>
  </data>
  <data name="AutoNotifyCutSceneEndTitle" xml:space="preserve">
    <value>自动通知过场剧情结束</value>
  </data>
  <data name="AutoNotifyMessages-BlockOwnMessages" xml:space="preserve">
    <value>屏蔽自己发送的消息</value>
  </data>
  <data name="AutoNotifyMessages-NotificationMessageHelp" xml:space="preserve">
    <value>提示信息外观 (Windows 10+)</value>
  </data>
  <data name="AutoNotifyMessages-OnlyWhenBackground" xml:space="preserve">
    <value>仅当游戏位于后台时提醒</value>
  </data>
  <data name="AutoNotifyMessages-SelectedTypesAmount" xml:space="preserve">
    <value>已选择 {0} 种消息类型</value>
  </data>
  <data name="AutoNotifyMessagesDescription" xml:space="preserve">
    <value>启用并配置完毕后, 当你选择的消息类型有新消息传入时, 自动发送一条 Windows 系统通知</value>
  </data>
  <data name="AutoNotifyMessagesTitle" xml:space="preserve">
    <value>自动通知新消息</value>
  </data>
  <data name="AutoNoviceNetwork-AttemptedTimes" xml:space="preserve">
    <value>已尝试次数</value>
  </data>
  <data name="AutoNoviceNetwork-Start" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="AutoNoviceNetwork-Stop" xml:space="preserve">
    <value>结束</value>
  </data>
  <data name="AutoNoviceNetworkDescription" xml:space="preserve">
    <value>点击开始后, 自动重复尝试加入新人频道</value>
  </data>
  <data name="AutoNoviceNetworkTitle" xml:space="preserve">
    <value>自动加入新人频道</value>
  </data>
  <data name="AutoQTEDescription" xml:space="preserve">
    <value>在副本中, 自动完成动态演练 (QTE)</value>
  </data>
  <data name="AutoQTETitle" xml:space="preserve">
    <value>自动动态演练</value>
  </data>
  <data name="AutoQuestAcceptDescription" xml:space="preserve">
    <value>任务接取界面出现后, 自动点击确认按钮</value>
  </data>
  <data name="AutoQuestAcceptTitle" xml:space="preserve">
    <value>自动确认任务接取</value>
  </data>
  <data name="AutoQuestCompleteDescription" xml:space="preserve">
    <value>任务结果界面出现后, 自动点击完成按钮</value>
  </data>
  <data name="AutoQuestCompleteTitle" xml:space="preserve">
    <value>自动确认任务结果</value>
  </data>
  <data name="AutoRefocusDescription" xml:space="preserve">
    <value>在副本内, 若丢失的焦点目标再次出现, 则自动重新焦点</value>
  </data>
  <data name="AutoRefocusTitle" xml:space="preserve">
    <value>自动重新焦点目标</value>
  </data>
  <data name="AutoRefreshPartyFinder-OnlyInactive" xml:space="preserve">
    <value>仅未操作状态下</value>
  </data>
  <data name="AutoRefreshPartyFinder-RefreshInterval" xml:space="preserve">
    <value>刷新间隔(秒)</value>
  </data>
  <data name="AutoRefreshPartyFinderDescription" xml:space="preserve">
    <value>打开队员招募后, 每经过固定间隔时间时, 自动刷新一次招募板</value>
  </data>
  <data name="AutoRefreshPartyFinderTitle" xml:space="preserve">
    <value>自动刷新招募板</value>
  </data>
  <data name="AutoRequestItemSubmitDescription" xml:space="preserve">
    <value>在递交物品时, 自动选择物品并完成递交</value>
  </data>
  <data name="AutoRequestItemSubmitTitle" xml:space="preserve">
    <value>自动选择并递交物品</value>
  </data>
  <data name="AutoRetainerCollectDescription" xml:space="preserve">
    <value>打开雇员列表界面后, 自动确认已探索结束雇员的探险结果并重新委派
(前置模块: 自动跳过对话)</value>
  </data>
  <data name="AutoRetainerCollectTitle" xml:space="preserve">
    <value>自动收取雇员</value>
  </data>
  <data name="AutoRetainerPriceAdjust-LowestAcceptablePrice" xml:space="preserve">
    <value>最低可接受价格</value>
  </data>
  <data name="AutoRetainerPriceAdjust-MaxPriceReduction" xml:space="preserve">
    <value>最大可接受降价值</value>
  </data>
  <data name="AutoRetainerPriceAdjust-MaxPriceReductionInputHelp" xml:space="preserve">
    <value>设置为 0 以禁用</value>
  </data>
  <data name="AutoRetainerPriceAdjust-MaxPriceReductionMessage" xml:space="preserve">
    <value>物品: {0} (市场价: {1} / 原价: {2}) 已超过最大可接受降价值: {3}, 跳过改价</value>
  </data>
  <data name="AutoRetainerPriceAdjust-SeparateNQAndHQ" xml:space="preserve">
    <value>区分 HQ 和 NQ 物品</value>
  </data>
  <data name="AutoRetainerPriceAdjust-SeparateNQAndHQHelp" xml:space="preserve">
    <value>勾选则代表, 若出售物品为 HQ, 则只获取市场上 HQ 物品的价格
如若市场上前十位出售物品中无 HQ, 则取 NQ 商品价格</value>
  </data>
  <data name="AutoRetainerPriceAdjust-SinglePriceReductionValue" xml:space="preserve">
    <value>单次压价值</value>
  </data>
  <data name="AutoRetainerPriceAdjust-WarnMessageReachLowestPrice" xml:space="preserve">
    <value>物品: {0} (当前市场价: {1} / 原价: {2}) 已低于设定最低价: {3}, 跳过改价</value>
  </data>
  <data name="AutoRetainerPriceAdjustDescription" xml:space="preserve">
    <value>打开雇员出售列表后, 自动将所有出售商品价格改为当前市场最低价格减去指定值
出售物品时, 自动获取当前市场最低价并完成出售</value>
  </data>
  <data name="AutoRetainerPriceAdjustTitle" xml:space="preserve">
    <value>自动雇员改价</value>
  </data>
  <data name="AutoSellCardsConfirmDescription" xml:space="preserve">
    <value>幻卡回收界面出现后, 自动点击确认按钮</value>
  </data>
  <data name="AutoSellCardsConfirmTitle" xml:space="preserve">
    <value>自动确认幻卡回收</value>
  </data>
  <data name="AutoShareRetainersGilsEvenly-Help" xml:space="preserve">
    <value>1. 请在雇员列表打开的状态下使用本模块
2. 请避免在启用了 自动收取雇员 模块且有雇员 即将完成探险的情况下使用本模块

调整方式说明:
方式1: 按照固定顺序调整 (雇员间金币极端不平均的情况下至少需要 背包里有所有雇员金币总数一半的金币)
方式2: 先取出所有金币, 再依次调整 (请自行避免因金币达到上限而蒙受损失的情况)</value>
  </data>
  <data name="AutoShareRetainersGilsEvenly-Method1" xml:space="preserve">
    <value>方式1</value>
  </data>
  <data name="AutoShareRetainersGilsEvenly-Method2" xml:space="preserve">
    <value>方式2</value>
  </data>
  <data name="AutoShareRetainersGilsEvenly-Start" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="AutoShareRetainersGilsEvenly-Stop" xml:space="preserve">
    <value>结束</value>
  </data>
  <data name="AutoShareRetainersGilsEvenlyDescription" xml:space="preserve">
    <value>配置完毕并点击开始后, 自动平均各个雇员所保管的金币数量
(前置模块: 自动跳过对话)</value>
  </data>
  <data name="AutoShareRetainersGilsEvenlyTitle" xml:space="preserve">
    <value>自动平均雇员金币</value>
  </data>
  <data name="AutoSkipPraetoriumDescription" xml:space="preserve">
    <value>自动跳过神兵要塞帝国南方堡、最终决战天幕魔导城和究极神兵破坏作战的过场动画</value>
  </data>
  <data name="AutoSkipPraetoriumTitle" xml:space="preserve">
    <value>自动跳过主随过场动画</value>
  </data>
  <data name="AutoSubmarineCollect-FailGettingSubmarineInfo" xml:space="preserve">
    <value>获取潜水艇信息失败, 请重试</value>
  </data>
  <data name="AutoSubmarineCollect-Start" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="AutoSubmarineCollect-Stop" xml:space="preserve">
    <value>停止</value>
  </data>
  <data name="AutoSubmarineCollect-WhatIsTheList" xml:space="preserve">
    <value>什么是潜水艇列表?</value>
  </data>
  <data name="AutoSubmarineCollectDescription" xml:space="preserve">
    <value>打开潜水艇列表, 并点击开始后, 自动确认潜水艇探索结果并重新委派
(前置模块: 自动跳过过场动画)</value>
  </data>
  <data name="AutoSubmarineCollectTitle" xml:space="preserve">
    <value>自动收取潜水艇 (测试/不稳定)</value>
  </data>
  <data name="AutoTalkSkipDescription" xml:space="preserve">
    <value>出现对话框时, 自动快进跳过</value>
  </data>
  <data name="AutoTalkSkipTitle" xml:space="preserve">
    <value>自动跳过对话</value>
  </data>
  <data name="AutoTankStance-OnlyAutoStanceWhenOneTank" xml:space="preserve">
    <value>仅当队伍最多容纳一名防护职业时</value>
  </data>
  <data name="AutoTankStance-OnlyAutoStanceWhenOneTankHelp" xml:space="preserve">
    <value>勾选本项意为:
当副本默认状态下最多只能有一名防护职业时, 自动开启盾姿

例: (默认状态下)
当进入迷宫挑战/团队任务时, 队伍最多只能有一名防护职业, 自动开启盾姿
当进入讨伐歼灭战/大型任务时, 队伍最多能有两名防护职业, 不自动开启盾姿</value>
  </data>
  <data name="AutoTankStanceDescription" xml:space="preserve">
    <value>进入副本后, 若当前为防护职业且未开启盾姿, 则自动开启盾姿</value>
  </data>
  <data name="AutoTankStanceTitle" xml:space="preserve">
    <value>自动开启盾姿</value>
  </data>
  <data name="AutoTMPDescription" xml:space="preserve">
    <value>交互游戏机后, 自动开始重复游玩莫古抓球机</value>
  </data>
  <data name="AutoTMPTitle" xml:space="preserve">
    <value>自动莫古抓球机</value>
  </data>
  <data name="AutoWithdrawRetainersGils-Help" xml:space="preserve">
    <value>1. 请在雇员列表打开的状态下使用本模块
2. 请避免在启用了 自动收取雇员 模块且有雇员 即将完成探险的情况下使用本模块
3. 请避免因金币达到上限而蒙受损失的情况</value>
  </data>
  <data name="AutoWithdrawRetainersGils-Start" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="AutoWithdrawRetainersGils-Stop" xml:space="preserve">
    <value>结束</value>
  </data>
  <data name="AutoWithdrawRetainersGilsDescription" xml:space="preserve">
    <value>启用并点击开始后, 自动取出所有雇员保管的所有金币
(前置模块: 自动跳过对话)</value>
  </data>
  <data name="AutoWithdrawRetainersGilsTitle" xml:space="preserve">
    <value>自动取出雇员金币</value>
  </data>
  <data name="Base" xml:space="preserve">
    <value>基础</value>
  </data>
  <data name="Combat" xml:space="preserve">
    <value>战斗</value>
  </data>
  <data name="CommandHelp" xml:space="preserve">
    <value>打开主界面
/pdr &lt;关键词&gt; → 打开主界面, 并搜索指定关键词</value>
  </data>
  <data name="ConflictKey" xml:space="preserve">
    <value>打断热键</value>
  </data>
  <data name="ConflictKey-InterruptMessage" xml:space="preserve">
    <value>已成功打断当前操作</value>
  </data>
  <data name="ConflictKeyHelp" xml:space="preserve">
    <value>部分模块会读取此处的热键设置, 以便让你使用热键对模块操作进行打断</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>联系/反馈</value>
  </data>
  <data name="ContactHelp" xml:space="preserve">
    <value>本插件开源免费, 如需建议/联系/反馈, 请到 GitHub 提交 Issue /  B站私信我</value>
  </data>
  <data name="DevModuleDescription" xml:space="preserve">
    <value>本地测试用模块专用临时标题与描述文本</value>
  </data>
  <data name="DevModuleTitle" xml:space="preserve">
    <value>本地测试用模块</value>
  </data>
  <data name="Enable" xml:space="preserve">
    <value>启用</value>
  </data>
  <data name="FastObjectInteract-AllowRightClickToTarget" xml:space="preserve">
    <value>允许右键按钮以选中目标</value>
  </data>
  <data name="FastObjectInteract-FontScale" xml:space="preserve">
    <value>字体缩放倍数</value>
  </data>
  <data name="FastObjectInteract-OverlayResizeMode" xml:space="preserve">
    <value>悬浮窗大小调整模式</value>
  </data>
  <data name="FastObjectInteract-SelectedObjectKinds" xml:space="preserve">
    <value>待显示目标类型</value>
  </data>
  <data name="FastObjectInteract-SelectedObjectKindsAmount" xml:space="preserve">
    <value>已选择 {0} 种目标类型</value>
  </data>
  <data name="FastObjectInteract-WindowInvisibleWhenInteract" xml:space="preserve">
    <value>交互时隐藏窗口</value>
  </data>
  <data name="FastObjectInteractDescription" xml:space="preserve">
    <value>添加一个自定义悬浮窗, 列出周围可交互物体, 可直接点击其中的按钮以实现更快速的交互</value>
  </data>
  <data name="FastObjectInteractTitle" xml:space="preserve">
    <value>快速目标交互</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>一般</value>
  </data>
  <data name="GoldSaucer" xml:space="preserve">
    <value>金碟</value>
  </data>
  <data name="ImageLoading" xml:space="preserve">
    <value>图片加载中</value>
  </data>
  <data name="Interface" xml:space="preserve">
    <value>界面</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="Notice" xml:space="preserve">
    <value>通知</value>
  </data>
  <data name="PFPageSizeCustomize-DisplayAmount" xml:space="preserve">
    <value>单页显示数量</value>
  </data>
  <data name="PFPageSizeCustomizeDescription" xml:space="preserve">
    <value>允许自定义队员招募中单页可显示的招募数量, 上限为单页 100 个招募</value>
  </data>
  <data name="PFPageSizeCustomizeTitle" xml:space="preserve">
    <value>自定义招募板单页显示数量</value>
  </data>
  <data name="PleaseSearch" xml:space="preserve">
    <value>请搜索</value>
  </data>
  <data name="Retainer" xml:space="preserve">
    <value>雇员</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="Settings-TipMessage0" xml:space="preserve">
    <value>提示</value>
  </data>
  <data name="Settings-TipMessage1" xml:space="preserve">
    <value>1. 某一模块的功能可能被不同的插件以不同方式实现, 请勿在不同插件间重复开启, 以避免出现兼容性问题</value>
  </data>
  <data name="Settings-TipMessage2" xml:space="preserve">
    <value>2. 若模块描述中出现"前置模块", 则代表该模块必须要有指定模块的辅助才能正常工作, 前置模块可以被其他插件的类似功能替代</value>
  </data>
</root>